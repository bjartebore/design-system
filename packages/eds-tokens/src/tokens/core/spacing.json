{
  "spacing": {
    "0": {
      "value": "0",
      "type": "spacing"
    },
    "1": {
      "value": "1",
      "type": "spacing"
    },
    "2": {
      "value": "2",
      "type": "spacing"
    },
    "3": {
      "value": "3",
      "type": "spacing"
    },
    "4": {
      "value": "4",
      "type": "spacing"
    },
    "5": {
      "value": "5",
      "type": "spacing"
    },
    "6": {
      "value": "6",
      "type": "spacing"
    },
    "7": {
      "value": "7",
      "type": "spacing"
    },
    "8": {
      "value": "8",
      "type": "spacing"
    },
    "9": {
      "value": "9",
      "type": "spacing"
    },
    "10": {
      "value": "10",
      "type": "spacing"
    },
    "11": {
      "value": "11",
      "type": "spacing"
    },
    "12": {
      "value": "12",
      "type": "spacing"
    },
    "13": {
      "value": "13",
      "type": "spacing"
    },
    "14": {
      "value": "14",
      "type": "spacing"
    },
    "15": {
      "value": "15",
      "type": "spacing"
    },
    "16": {
      "value": "16",
      "type": "spacing"
    },
    "17": {
      "value": "17",
      "type": "spacing"
    },
    "18": {
      "value": "18",
      "type": "spacing"
    },
    "19": {
      "value": "19",
      "type": "spacing"
    },
    "20": {
      "value": "20",
      "type": "spacing"
    },
    "21": {
      "value": "21",
      "type": "spacing"
    },
    "22": {
      "value": "22",
      "type": "spacing"
    },
    "23": {
      "value": "23",
      "type": "spacing"
    },
    "24": {
      "value": "24",
      "type": "spacing"
    }
  },
  "grid": {
    "0": {
      "value": "{grid.base}*0",
      "type": "other"
    },
    "1": {
      "value": "{grid.base}*1",
      "type": "other"
    },
    "2": {
      "value": "{grid.base}*2",
      "type": "other"
    },
    "3": {
      "value": "{grid.base}*3",
      "type": "other"
    },
    "4": {
      "value": "{grid.base}*4",
      "type": "other"
    },
    "5": {
      "value": "{grid.base}*5",
      "type": "other"
    },
    "6": {
      "value": "{grid.base}*6",
      "type": "other"
    },
    "7": {
      "value": "{grid.base}*7",
      "type": "other"
    },
    "8": {
      "value": "{grid.base}*8",
      "type": "other"
    },
    "9": {
      "value": "{grid.base}*9",
      "type": "other"
    },
    "10": {
      "value": "{grid.base}*10",
      "type": "other"
    },
    "11": {
      "value": "{grid.base}*11",
      "type": "other"
    },
    "12": {
      "value": "{grid.base}*12",
      "type": "other"
    },
    "13": {
      "value": "{grid.base}*13",
      "type": "other"
    },
    "14": {
      "value": "{grid.base}*14",
      "type": "other"
    },
    "15": {
      "value": "{grid.base}*15",
      "type": "other"
    },
    "16": {
      "value": "{grid.base}*16",
      "type": "other"
    },
    "17": {
      "value": "{grid.base}*17",
      "type": "other"
    },
    "18": {
      "value": "{grid.base}*18",
      "type": "other"
    },
    "19": {
      "value": "{grid.base}*19",
      "type": "other"
    },
    "20": {
      "value": "{grid.base}*20",
      "type": "other"
    }
  },
  "container": {
    "snapped": {
      "4": {
        "12": {
          "tight": {
            "0": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.tight.0} - roundTo({spacing.8} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
                "typography": "{typography.tight.0}"
              },
              "type": "composition"
            },
            "1": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.tight.1} - roundTo({spacing.8} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
                "typography": "{typography.tight.1}"
              },
              "type": "composition"
            },
            "2": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.tight.2} - roundTo({spacing.8} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
                "typography": "{typography.tight.2}"
              },
              "type": "composition"
            },
            "3": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
                "typography": "{typography.tight.3}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "4": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.tight.4} - roundTo({spacing.8} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
                "typography": "{typography.tight.4}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "5": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.tight.5} - roundTo({spacing.8} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
                "typography": "{typography.tight.5}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "6": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.tight.6} - roundTo({spacing.8} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
                "typography": "{typography.tight.6}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "7": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.tight.7} - roundTo({spacing.8} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
                "typography": "{typography.tight.7}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "8": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.tight.8} - roundTo({spacing.8} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
                "typography": "{typography.tight.8}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "9": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.tight.9} - roundTo({spacing.8} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
                "typography": "{typography.tight.9}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "10": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.tight.10} - roundTo({spacing.8} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
                "typography": "{typography.tight.10}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
            }
          },
          "compressed": {
            "0": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.compressed.0} - roundTo({spacing.8} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
                "typography": "{typography.compressed.0}"
              },
              "type": "composition"
            },
            "1": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.compressed.1} - roundTo({spacing.8} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
                "typography": "{typography.compressed.1}"
              },
              "type": "composition"
            },
            "2": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.compressed.2} - roundTo({spacing.8} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
                "typography": "{typography.compressed.2}"
              },
              "type": "composition"
            },
            "3": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
                "typography": "{typography.compressed.3}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "4": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.compressed.4} - roundTo({spacing.8} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
                "typography": "{typography.compressed.4}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "5": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.compressed.5} - roundTo({spacing.8} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
                "typography": "{typography.compressed.5}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "6": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.compressed.6} - roundTo({spacing.8} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
                "typography": "{typography.compressed.6}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "7": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.compressed.7} - roundTo({spacing.8} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
                "typography": "{typography.compressed.7}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "8": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.compressed.8} - roundTo({spacing.8} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
                "typography": "{typography.compressed.8}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "9": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.compressed.9} - roundTo({spacing.8} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
                "typography": "{typography.compressed.9}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            },
            "10": {
              "value": {
                "horizontalPadding": "{spacing.8}",
                "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
                "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.compressed.10} - roundTo({spacing.8} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
                "typography": "{typography.compressed.10}"
              },
              "type": "composition",
              "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
            }
          }
        }
      },
      "8": {
        "tight": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.tight.0} - roundTo({spacing.8} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.tight.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.tight.1} - roundTo({spacing.8} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.tight.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.tight.2} - roundTo({spacing.8} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.tight.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.tight.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.tight.4} - roundTo({spacing.8} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.tight.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.tight.5} - roundTo({spacing.8} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.tight.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.tight.6} - roundTo({spacing.8} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.tight.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.tight.7} - roundTo({spacing.8} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.tight.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.tight.8} - roundTo({spacing.8} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.tight.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.tight.9} - roundTo({spacing.8} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.tight.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.tight.10} - roundTo({spacing.8} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.tight.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "compressed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.compressed.0} - roundTo({spacing.8} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.compressed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.compressed.1} - roundTo({spacing.8} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.compressed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.compressed.2} - roundTo({spacing.8} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.compressed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.compressed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.compressed.4} - roundTo({spacing.8} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.compressed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.compressed.5} - roundTo({spacing.8} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.compressed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.compressed.6} - roundTo({spacing.8} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.compressed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.compressed.7} - roundTo({spacing.8} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.compressed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.compressed.8} - roundTo({spacing.8} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.compressed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.compressed.9} - roundTo({spacing.8} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.compressed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.compressed.10} - roundTo({spacing.8} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.compressed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "comfortable": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.comfortable.0} - roundTo({spacing.8} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.comfortable.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.comfortable.1} - roundTo({spacing.8} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.comfortable.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.comfortable.2} - roundTo({spacing.8} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.comfortable.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.comfortable.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.comfortable.4} - roundTo({spacing.8} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.comfortable.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.comfortable.5} - roundTo({spacing.8} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.comfortable.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.comfortable.6} - roundTo({spacing.8} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.comfortable.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.comfortable.7} - roundTo({spacing.8} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.comfortable.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.comfortable.8} - roundTo({spacing.8} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.comfortable.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.comfortable.9} - roundTo({spacing.8} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.comfortable.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.comfortable.10} - roundTo({spacing.8} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.comfortable.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.8} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "relaxed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.relaxed.0} - roundTo({spacing.8} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.relaxed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.relaxed.1} - roundTo({spacing.8} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.relaxed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.relaxed.2} - roundTo({spacing.8} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.relaxed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.relaxed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.relaxed.4} - roundTo({spacing.8} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.relaxed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.relaxed.5} - roundTo({spacing.8} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.relaxed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.relaxed.6} - roundTo({spacing.8} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.relaxed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.relaxed.7} - roundTo({spacing.8} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.relaxed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.relaxed.8} - roundTo({spacing.8} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.relaxed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.relaxed.9} - roundTo({spacing.8} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.relaxed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.8}",
              "paddingBottom": "roundTo({spacing.8} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.8} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.relaxed.10} - roundTo({spacing.8} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.relaxed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.8} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        }
      },
      "12": {
        "tight": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.tight.0} - roundTo({spacing.12} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.tight.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.tight.1} - roundTo({spacing.12} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.tight.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.tight.2} - roundTo({spacing.12} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.tight.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.tight.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.tight.4} - roundTo({spacing.12} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.tight.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.tight.5} - roundTo({spacing.12} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.tight.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.tight.6} - roundTo({spacing.12} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.tight.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.tight.7} - roundTo({spacing.12} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.tight.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.tight.8} - roundTo({spacing.12} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.tight.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.tight.9} - roundTo({spacing.12} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.tight.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.tight.10} - roundTo({spacing.12} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.tight.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.12} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.tight.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "compressed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.compressed.0} - roundTo({spacing.12} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.compressed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.compressed.1} - roundTo({spacing.12} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.compressed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.compressed.2} - roundTo({spacing.12} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.compressed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.compressed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.compressed.4} - roundTo({spacing.12} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.compressed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.compressed.5} - roundTo({spacing.12} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.compressed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.compressed.6} - roundTo({spacing.12} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.compressed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.compressed.7} - roundTo({spacing.12} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.compressed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.compressed.8} - roundTo({spacing.12} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.compressed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.compressed.9} - roundTo({spacing.12} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.compressed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.compressed.10} - roundTo({spacing.12} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.compressed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "comfortable": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.comfortable.0} - roundTo({spacing.12} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.comfortable.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.comfortable.1} - roundTo({spacing.12} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.comfortable.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.comfortable.2} - roundTo({spacing.12} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.comfortable.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.comfortable.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.comfortable.4} - roundTo({spacing.12} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.comfortable.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.comfortable.5} - roundTo({spacing.12} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.comfortable.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.comfortable.6} - roundTo({spacing.12} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.comfortable.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.comfortable.7} - roundTo({spacing.12} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.comfortable.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.comfortable.8} - roundTo({spacing.12} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.comfortable.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.comfortable.9} - roundTo({spacing.12} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.comfortable.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.comfortable.10} - roundTo({spacing.12} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.comfortable.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.12} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "relaxed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.relaxed.0} - roundTo({spacing.12} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.relaxed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.relaxed.1} - roundTo({spacing.12} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.relaxed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.relaxed.2} - roundTo({spacing.12} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.relaxed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.relaxed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.relaxed.4} - roundTo({spacing.12} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.relaxed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.relaxed.5} - roundTo({spacing.12} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.relaxed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.relaxed.6} - roundTo({spacing.12} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.relaxed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.relaxed.7} - roundTo({spacing.12} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.relaxed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.relaxed.8} - roundTo({spacing.12} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.relaxed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.relaxed.9} - roundTo({spacing.12} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.relaxed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.12}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.relaxed.10} - roundTo({spacing.12} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.relaxed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.12} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.12} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.12.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        }
      },
      "16": {
        "tight": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.tight.0} - roundTo({spacing.16} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.tight.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.tight.1} - roundTo({spacing.16} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.tight.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.tight.2} - roundTo({spacing.16} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.tight.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.tight.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.tight.4} - roundTo({spacing.16} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.tight.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.tight.5} - roundTo({spacing.16} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.tight.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.tight.6} - roundTo({spacing.16} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.tight.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.tight.7} - roundTo({spacing.16} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.tight.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.tight.8} - roundTo({spacing.16} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.tight.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.tight.9} - roundTo({spacing.16} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.tight.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.tight.10} - roundTo({spacing.16} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.tight.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.16} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.tight.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "compressed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.compressed.0} - roundTo({spacing.16} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.compressed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.compressed.1} - roundTo({spacing.16} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.compressed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.compressed.2} - roundTo({spacing.16} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.compressed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.compressed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.compressed.4} - roundTo({spacing.16} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.compressed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.compressed.5} - roundTo({spacing.16} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.compressed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.compressed.6} - roundTo({spacing.16} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.compressed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.compressed.7} - roundTo({spacing.16} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.compressed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.compressed.8} - roundTo({spacing.16} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.compressed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.compressed.9} - roundTo({spacing.16} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.compressed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.compressed.10} - roundTo({spacing.16} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.compressed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.16} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "comfortable": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.comfortable.0} - roundTo({spacing.16} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.comfortable.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.comfortable.1} - roundTo({spacing.16} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.comfortable.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.comfortable.2} - roundTo({spacing.16} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.comfortable.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.comfortable.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.comfortable.4} - roundTo({spacing.16} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.comfortable.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.comfortable.5} - roundTo({spacing.16} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.comfortable.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.comfortable.6} - roundTo({spacing.16} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.comfortable.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.comfortable.7} - roundTo({spacing.16} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.comfortable.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.comfortable.8} - roundTo({spacing.16} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.comfortable.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.comfortable.9} - roundTo({spacing.16} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.comfortable.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.comfortable.10} - roundTo({spacing.16} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.comfortable.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.16} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "relaxed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.relaxed.0} - roundTo({spacing.16} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.relaxed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.relaxed.1} - roundTo({spacing.16} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.relaxed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.relaxed.2} - roundTo({spacing.16} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.relaxed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.relaxed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.relaxed.4} - roundTo({spacing.16} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.relaxed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.relaxed.5} - roundTo({spacing.16} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.relaxed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.relaxed.6} - roundTo({spacing.16} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.relaxed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.relaxed.7} - roundTo({spacing.16} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.relaxed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.relaxed.8} - roundTo({spacing.16} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.relaxed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.relaxed.9} - roundTo({spacing.16} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.relaxed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.16}",
              "paddingBottom": "roundTo({spacing.16} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.16} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.relaxed.10} - roundTo({spacing.16} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.relaxed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.16} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.16} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.16.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        }
      },
      "20": {
        "tight": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.tight.0} - roundTo({spacing.20} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.tight.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.tight.1} - roundTo({spacing.20} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.tight.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.tight.2} - roundTo({spacing.20} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.tight.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.tight.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.tight.4} - roundTo({spacing.20} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.tight.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.tight.5} - roundTo({spacing.20} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.tight.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.tight.6} - roundTo({spacing.20} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.tight.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.tight.7} - roundTo({spacing.20} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.tight.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.tight.8} - roundTo({spacing.20} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.tight.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.tight.9} - roundTo({spacing.20} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.tight.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.tight.10} - roundTo({spacing.20} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.tight.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.20} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.tight.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "compressed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.compressed.0} - roundTo({spacing.20} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.compressed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.compressed.1} - roundTo({spacing.20} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.compressed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.compressed.2} - roundTo({spacing.20} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.compressed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.compressed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.compressed.4} - roundTo({spacing.20} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.compressed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.compressed.5} - roundTo({spacing.20} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.compressed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.compressed.6} - roundTo({spacing.20} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.compressed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.compressed.7} - roundTo({spacing.20} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.compressed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.compressed.8} - roundTo({spacing.20} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.compressed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.compressed.9} - roundTo({spacing.20} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.compressed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.compressed.10} - roundTo({spacing.20} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.compressed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.20} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "comfortable": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.comfortable.0} - roundTo({spacing.20} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.comfortable.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.comfortable.1} - roundTo({spacing.20} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.comfortable.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.comfortable.2} - roundTo({spacing.20} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.comfortable.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.comfortable.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.comfortable.4} - roundTo({spacing.20} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.comfortable.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.comfortable.5} - roundTo({spacing.20} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.comfortable.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.comfortable.6} - roundTo({spacing.20} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.comfortable.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.comfortable.7} - roundTo({spacing.20} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.comfortable.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.comfortable.8} - roundTo({spacing.20} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.comfortable.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.comfortable.9} - roundTo({spacing.20} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.comfortable.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.comfortable.10} - roundTo({spacing.20} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.comfortable.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.20} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "relaxed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.relaxed.0} - roundTo({spacing.20} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.relaxed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.relaxed.1} - roundTo({spacing.20} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.relaxed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.relaxed.2} - roundTo({spacing.20} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.relaxed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.relaxed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.relaxed.4} - roundTo({spacing.20} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.relaxed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.relaxed.5} - roundTo({spacing.20} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.relaxed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.relaxed.6} - roundTo({spacing.20} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.relaxed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.relaxed.7} - roundTo({spacing.20} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.relaxed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.relaxed.8} - roundTo({spacing.20} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.relaxed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.relaxed.9} - roundTo({spacing.20} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.relaxed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.20}",
              "paddingBottom": "roundTo({spacing.20} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.20} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.relaxed.10} - roundTo({spacing.20} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.relaxed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.20} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.20} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.20.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        }
      },
      "24": {
        "tight": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.tight.0} - roundTo({spacing.24} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.tight.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.tight.1} - roundTo({spacing.24} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.tight.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.tight.2} - roundTo({spacing.24} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.tight.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.tight.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.tight.4} - roundTo({spacing.24} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.tight.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.tight.5} - roundTo({spacing.24} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.tight.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.tight.6} - roundTo({spacing.24} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.tight.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.tight.7} - roundTo({spacing.24} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.tight.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.tight.8} - roundTo({spacing.24} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.tight.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.tight.9} - roundTo({spacing.24} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.tight.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.tight.10} - roundTo({spacing.24} - ({lineHeight.tight.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.tight.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.24} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.tight.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "compressed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.compressed.0} - roundTo({spacing.24} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.compressed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.compressed.1} - roundTo({spacing.24} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.compressed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.compressed.2} - roundTo({spacing.24} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.compressed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.compressed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.compressed.4} - roundTo({spacing.24} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.compressed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.compressed.5} - roundTo({spacing.24} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.compressed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.compressed.6} - roundTo({spacing.24} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.compressed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.compressed.7} - roundTo({spacing.24} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.compressed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.compressed.8} - roundTo({spacing.24} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.compressed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.compressed.9} - roundTo({spacing.24} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.compressed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.compressed.10} - roundTo({spacing.24} - ({lineHeight.compressed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.compressed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.24} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "comfortable": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.comfortable.0} - roundTo({spacing.24} - ({lineHeight.comfortable.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.comfortable.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.comfortable.1} - roundTo({spacing.24} - ({lineHeight.comfortable.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.comfortable.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.comfortable.2} - roundTo({spacing.24} - ({lineHeight.comfortable.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.comfortable.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.comfortable.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.comfortable.4} - roundTo({spacing.24} - ({lineHeight.comfortable.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.comfortable.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.comfortable.5} - roundTo({spacing.24} - ({lineHeight.comfortable.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.comfortable.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.comfortable.6} - roundTo({spacing.24} - ({lineHeight.comfortable.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.comfortable.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.comfortable.7} - roundTo({spacing.24} - ({lineHeight.comfortable.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.comfortable.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.comfortable.8} - roundTo({spacing.24} - ({lineHeight.comfortable.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.comfortable.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.comfortable.9} - roundTo({spacing.24} - ({lineHeight.comfortable.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.comfortable.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.comfortable.10} - roundTo({spacing.24} - ({lineHeight.comfortable.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.comfortable.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.comfortable.3} - roundTo({spacing.24} - ({lineHeight.comfortable.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.comfortable.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "relaxed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.relaxed.0} - roundTo({spacing.24} - ({lineHeight.relaxed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.relaxed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.relaxed.1} - roundTo({spacing.24} - ({lineHeight.relaxed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.relaxed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.relaxed.2} - roundTo({spacing.24} - ({lineHeight.relaxed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.relaxed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.relaxed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.relaxed.4} - roundTo({spacing.24} - ({lineHeight.relaxed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.relaxed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.relaxed.5} - roundTo({spacing.24} - ({lineHeight.relaxed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.relaxed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.relaxed.6} - roundTo({spacing.24} - ({lineHeight.relaxed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.relaxed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.relaxed.7} - roundTo({spacing.24} - ({lineHeight.relaxed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.relaxed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.relaxed.8} - roundTo({spacing.24} - ({lineHeight.relaxed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.relaxed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.relaxed.9} - roundTo({spacing.24} - ({lineHeight.relaxed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.relaxed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "10": {
            "value": {
              "horizontalPadding": "{spacing.24}",
              "paddingBottom": "roundTo({spacing.24} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "paddingTop": "{spacing.24} * 2 + {grid.base} * ceil({capHeight.rounded.10} / {grid.base}) - {lineHeight.relaxed.10} - roundTo({spacing.24} - ({lineHeight.relaxed.10} - {capHeight.rounded.10}) / 2)",
              "typography": "{typography.relaxed.10}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.24} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.relaxed.3} - roundTo({spacing.24} - ({lineHeight.relaxed.3} - {capHeight.3}) / 2)\n\nReferencing {container.24.relaxed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        }
      }
    },
    "centered": {
      "12": {
        "12": {
          "tight": {
            "0": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.0} - {lineHeight.tight.0}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.0} - {lineHeight.tight.0}) / 2",
                "typography": "{typography.tight.0}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.0} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.0} / {grid.base}))"
            },
            "1": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.1} - {lineHeight.tight.1}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.1} - {lineHeight.tight.1}) / 2",
                "typography": "{typography.tight.1}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.1} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.1} / {grid.base}))"
            },
            "2": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.2} - {lineHeight.tight.2}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.2} - {lineHeight.tight.2}) / 2",
                "typography": "{typography.tight.2}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "3": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.3} - {lineHeight.tight.3}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.3} - {lineHeight.tight.3}) / 2",
                "typography": "{typography.tight.3}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "4": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.4} - {lineHeight.tight.4}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.4} - {lineHeight.tight.4}) / 2",
                "typography": "{typography.tight.4}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "5": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.5} - {lineHeight.tight.5}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.5} - {lineHeight.tight.5}) / 2",
                "typography": "{typography.tight.5}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "6": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.6} - {lineHeight.tight.6}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.6} - {lineHeight.tight.6}) / 2",
                "typography": "{typography.tight.6}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "7": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.7} - {lineHeight.tight.7}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.7} - {lineHeight.tight.7}) / 2",
                "typography": "{typography.tight.7}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "8": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.8} - {lineHeight.tight.8}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.8} - {lineHeight.tight.8}) / 2",
                "typography": "{typography.tight.8}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "9": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.9} - {lineHeight.tight.9}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.9} - {lineHeight.tight.9}) / 2",
                "typography": "{typography.tight.9}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            },
            "10": {
              "value": {
                "horizontalPadding": "{spacing.12}",
                "paddingBottom": "({spacing.12} * 2 + {capHeight.snappedToGrid.10} - {lineHeight.tight.10}) / 2",
                "paddingTop": "({spacing.12} * 2 + {capHeight.snappedToGrid.10} - {lineHeight.tight.10}) / 2",
                "typography": "{typography.tight.10}"
              },
              "type": "composition",
              "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
            }
          }
        }
      }
    },
    "inline": {
      "4": {
        "value": {
          "horizontalPadding": "{spacing.4}"
        },
        "type": "composition"
      },
      "8": {
        "value": {
          "horizontalPadding": "{spacing.8}"
        },
        "type": "composition"
      },
      "12": {
        "value": {
          "horizontalPadding": "{spacing.12}"
        },
        "type": "composition"
      },
      "16": {
        "value": {
          "horizontalPadding": "{spacing.16}"
        },
        "type": "composition"
      },
      "20": {
        "value": {
          "horizontalPadding": "{spacing.20}"
        },
        "type": "composition"
      },
      "24": {
        "value": {
          "horizontalPadding": "{spacing.24}"
        },
        "type": "composition"
      }
    }
  }
}