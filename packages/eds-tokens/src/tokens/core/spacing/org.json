{
  "container": {
    "default": {
      "alignedToGrid": {
        "tight": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.tight.0} - roundTo({spacing.4} - ({lineHeight.tight.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.tight.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.tight.1} - roundTo({spacing.4} - ({lineHeight.tight.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.tight.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.tight.2} - roundTo({spacing.4} - ({lineHeight.tight.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.tight.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.4} - ({lineHeight.tight.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.tight.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.tight.4} - roundTo({spacing.4} - ({lineHeight.tight.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.tight.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.tight.5} - roundTo({spacing.4} - ({lineHeight.tight.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.tight.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.tight.6} - roundTo({spacing.4} - ({lineHeight.tight.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.tight.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.tight.7} - roundTo({spacing.4} - ({lineHeight.tight.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.tight.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.tight.8} - roundTo({spacing.4} - ({lineHeight.tight.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.tight.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.4} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.4} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.tight.9} - roundTo({spacing.4} - ({lineHeight.tight.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.tight.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.tight.3} - roundTo({spacing.8} - ({lineHeight.tight.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.tight.3.paddingBottom} in paddingTop results in the wrong number"
          }
        },
        "compressed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.0} / {grid.base}) - {lineHeight.compressed.0} - roundTo({spacing.12} - ({lineHeight.compressed.0} - {capHeight.rounded.0}) / 2)",
              "typography": "{typography.compressed.0}"
            },
            "type": "composition"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.1} / {grid.base}) - {lineHeight.compressed.1} - roundTo({spacing.12} - ({lineHeight.compressed.1} - {capHeight.rounded.1}) / 2)",
              "typography": "{typography.compressed.1}"
            },
            "type": "composition"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.2} / {grid.base}) - {lineHeight.compressed.2} - roundTo({spacing.12} - ({lineHeight.compressed.2} - {capHeight.rounded.2}) / 2)",
              "typography": "{typography.compressed.2}"
            },
            "type": "composition"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.12} - ({lineHeight.compressed.3} - {capHeight.rounded.3}) / 2)",
              "typography": "{typography.compressed.3}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.4} / {grid.base}) - {lineHeight.compressed.4} - roundTo({spacing.12} - ({lineHeight.compressed.4} - {capHeight.rounded.4}) / 2)",
              "typography": "{typography.compressed.4}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.5} / {grid.base}) - {lineHeight.compressed.5} - roundTo({spacing.12} - ({lineHeight.compressed.5} - {capHeight.rounded.5}) / 2)",
              "typography": "{typography.compressed.5}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.6} / {grid.base}) - {lineHeight.compressed.6} - roundTo({spacing.12} - ({lineHeight.compressed.6} - {capHeight.rounded.6}) / 2)",
              "typography": "{typography.compressed.6}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.7} / {grid.base}) - {lineHeight.compressed.7} - roundTo({spacing.12} - ({lineHeight.compressed.7} - {capHeight.rounded.7}) / 2)",
              "typography": "{typography.compressed.7}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.8} / {grid.base}) - {lineHeight.compressed.8} - roundTo({spacing.12} - ({lineHeight.compressed.8} - {capHeight.rounded.8}) / 2)",
              "typography": "{typography.compressed.8}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "roundTo({spacing.12} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "paddingTop": "{spacing.12} * 2 + {grid.base} * ceil({capHeight.rounded.9} / {grid.base}) - {lineHeight.compressed.9} - roundTo({spacing.12} - ({lineHeight.compressed.9} - {capHeight.rounded.9}) / 2)",
              "typography": "{typography.compressed.9}"
            },
            "type": "composition",
            "description": "Padding-bottom: roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\nPadding-top: {spacing.8} * 2 + {grid.base} * ceil({capHeight.3} / {grid.base}) - {lineHeight.compressed.3} - roundTo({spacing.8} - ({lineHeight.compressed.3} - {capHeight.3}) / 2)\n\nReferencing {container.8.compressed.3.paddingBottom} in paddingTop results in the wrong number"
          }
        }
      },
      "alignedToCenter": {
        "tight": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.0} - {lineHeight.tight.0}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.0} - {lineHeight.tight.0}) / 2",
              "typography": "{typography.tight.0}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.0} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.0} / {grid.base}))"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.1} - {lineHeight.tight.1}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.1} - {lineHeight.tight.1}) / 2",
              "typography": "{typography.tight.1}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.1} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.1} / {grid.base}))"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.2} - {lineHeight.tight.2}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.2} - {lineHeight.tight.2}) / 2",
              "typography": "{typography.tight.2}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.3} - {lineHeight.tight.3}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.3} - {lineHeight.tight.3}) / 2",
              "typography": "{typography.tight.3}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.4} - {lineHeight.tight.4}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.4} - {lineHeight.tight.4}) / 2",
              "typography": "{typography.tight.4}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.5} - {lineHeight.tight.5}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.5} - {lineHeight.tight.5}) / 2",
              "typography": "{typography.tight.5}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.6} - {lineHeight.tight.6}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.6} - {lineHeight.tight.6}) / 2",
              "typography": "{typography.tight.6}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.7} - {lineHeight.tight.7}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.7} - {lineHeight.tight.7}) / 2",
              "typography": "{typography.tight.7}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.8} - {lineHeight.tight.8}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.8} - {lineHeight.tight.8}) / 2",
              "typography": "{typography.tight.8}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.9} - {lineHeight.tight.9}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.9} - {lineHeight.tight.9}) / 2",
              "typography": "{typography.tight.9}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          }
        },
        "compressed": {
          "0": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.0} - {lineHeight.compressed.0}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.0} - {lineHeight.compressed.0}) / 2",
              "typography": "{typography.compressed.0}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.0} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.0} / {grid.base}))"
          },
          "1": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.1} - {lineHeight.compressed.1}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.1} - {lineHeight.compressed.1}) / 2",
              "typography": "{typography.compressed.1}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.1} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.1} / {grid.base}))"
          },
          "2": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.2} - {lineHeight.compressed.2}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.2} - {lineHeight.compressed.2}) / 2",
              "typography": "{typography.compressed.2}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "3": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.3} - {lineHeight.compressed.3}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.3} - {lineHeight.compressed.3}) / 2",
              "typography": "{typography.compressed.3}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "4": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.4} - {lineHeight.compressed.4}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.4} - {lineHeight.compressed.4}) / 2",
              "typography": "{typography.compressed.4}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "5": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.5} - {lineHeight.compressed.5}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.5} - {lineHeight.compressed.5}) / 2",
              "typography": "{typography.compressed.5}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "6": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.6} - {lineHeight.compressed.6}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.6} - {lineHeight.compressed.6}) / 2",
              "typography": "{typography.compressed.6}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "7": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.7} - {lineHeight.compressed.7}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.7} - {lineHeight.compressed.7}) / 2",
              "typography": "{typography.compressed.7}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "8": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.8} - {lineHeight.compressed.8}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.8} - {lineHeight.compressed.8}) / 2",
              "typography": "{typography.compressed.8}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.4} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          },
          "9": {
            "value": {
              "horizontalPadding": "{spacing.4}",
              "paddingBottom": "({spacing.4} * 2 + {capHeight.snappedToGrid.9} - {lineHeight.compressed.9}) / 2",
              "paddingTop": "({spacing.4} * 2 + {capHeight.snappedToGrid.9} - {lineHeight.compressed.9}) / 2",
              "typography": "{typography.compressed.9}"
            },
            "type": "composition",
            "description": "Capheight rounded to nearest gridline (9.8 ≈ 10 ≈ 12): {grid.base} * ceil({capHeight.2} / {grid.base})\nComputed container height (36): ({spacing.12} * 2) + ({grid.base} * ceil({capHeight.2} / {grid.base}))"
          }
        }
      }
    },
    "inline": {
      "4": {
        "value": {
          "horizontalPadding": "{spacing.4}",
          "verticalPadding": "0"
        },
        "type": "composition"
      },
      "8": {
        "value": {
          "horizontalPadding": "{spacing.8}"
        },
        "type": "composition"
      },
      "12": {
        "value": {
          "horizontalPadding": "{spacing.12}",
          "verticalPadding": "0",
          "itemSpacing": "0"
        },
        "type": "composition"
      },
      "16": {
        "value": {
          "horizontalPadding": "{spacing.16}"
        },
        "type": "composition"
      },
      "20": {
        "value": {
          "horizontalPadding": "{spacing.20}"
        },
        "type": "composition"
      },
      "24": {
        "value": {
          "horizontalPadding": "{spacing.24}"
        },
        "type": "composition"
      }
    }
  }
}
